@model FilRouge.Web.Models.UserQuestionResponseModel
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>


    <h2>
        @ViewBag.TitlePartialView
    </h2>

    @Html.LabelFor(model => model.Content):
    @Html.DisplayFor(model => model.Content)
    <br />


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />


        @for (var i = 0; i < Model.Responses.Count(); i++)

    {
        <div class="form-group">
            @Html.Name(Model.Responses.ElementAt(i).Content)

            <div class="col-md-10">
                <div class="checkbox">

                    @*@Html.HiddenFor(model => model.UserResponses[i].QuestionQuizz.QuestionId, new { Value = @Model.Responses.ElementAt(i).QuestionId })
                    @Html.HiddenFor(model => model.UserResponses[i].QuestionQuizz.QuizzId, new { Value = @TempData["idQuizz"] })*@
                    @*@Html.HiddenFor(model => model.UserResponses[i].QuestionQuizz.Id, new { Value = @Model.Id })*@
                    @Html.HiddenFor(model => model.UserResponses[i].ResponseId, new { id = "UserResponses[" + i + "].ResponseId", Value = @Model.Responses.ElementAt(i).Id })
                    @Html.HiddenFor(model => model.UserResponses[i].QuestionQuizzId, new { id = "UserResponses[" + i + "].Question_Id", Value = @Model.Responses.ElementAt(i).QuestionId })


                    @Html.HiddenFor(model => model.Id, new { Value = Model.Id })
                    @Html.HiddenFor(model => model.UserQuizzId, new { Value = @TempData["idQuizz"] })
                    @Html.HiddenFor(model => model.QuestionId, new { Value = @Model.Responses.ElementAt(i).QuestionId })
                    @Html.HiddenFor(model => model.DisplayNum, new { Value = @Model.DisplayNum })


                    @Html.Display(Model.Responses.ElementAt(i).Content)
                    @Html.EditorFor(model => model.Responses.ElementAt(i).Content)




                    @Html.CheckBox(Model.Responses.ElementAt(i).Content)
                    @Html.Display(Model.Responses.ElementAt(i).Content)
                </div>
            </div>
        </div>
}

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>Ajoutez un commentaire: </label>
                @Html.EditorFor(model => model.Comment)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>Refus de répondre</label>
                @Html.CheckBoxFor(model=>model.RefuseToAnswer)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</body>
</html>







