@model FilRouge.Model.Models.QuestionModel

@{
    ViewBag.Title = "Create";
}

<h2>View</h2>





@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>QuestionViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextArea("myTextArea", "This is value", new { @class = "form-control" })*@

                @Html.TextArea("Content", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("Content", "Please type a question", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Difficulty", (IEnumerable<SelectListItem>)ViewBag.difficulties, "...", new { @class = "extra-class" })
                @Html.ValidationMessage("Difficulty", "Please choose a difficulty.", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Technology, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Technology", (IEnumerable<SelectListItem>)ViewBag.technologies, "...", new { @class = "extra-class" })
                @Html.ValidationMessage("Technology", "Please choose a technologie.", new { @class = "text-danger" })
                @*@Html.ValidationMessageFor(model => model.Technology, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Type", (IEnumerable<SelectListItem>)ViewBag.types, "...", new { @class = "extra-class" })
                @Html.ValidationMessage("Technology", "Please choose a question type.", new { @class = "text-danger" })
                @*@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
